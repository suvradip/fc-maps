/**
 * @description - creates both the md and js file from html
 * @how to run - node prepare-md-and-js.js
 * @dependencies - nodeJs
 */

var fs = require('fs'),
    /**
     * @description - specify the folder locations and
     *   folder must be placed outside the script folder.
     * PARENT_DIR -folder location of parent folder.  
     * DIR_SPEC - folder location of the specsheet files
     * DIR_HTML - folder location of the .html files which is generated by the other script
     * DIR_MD_OUT - location of the folder where to place .md files
     * DIR_MD_JS - location of the folder where to place .js files
     */
    PARENT_DIR = "../gujrat/",
    DIR_SPEC = PARENT_DIR + "spec-sheets/", 
    DIR_HTML =  PARENT_DIR + "html/",
    DIR_MD_OUT = PARENT_DIR + "md/",
    DIR_JS_OUT = PARENT_DIR + "js/";

/**
 * @description - checks the dire, is it is not present the creates a new one.
 *  it is a recursive function. 
 * @param {Array} - here we used default `arguments` object to get all the parameters
 */
var checkDir = function(){
  var _path = arguments;
  if(_path.length === 1) {

    if(!fs.existsSync(_path[0]))
      fs.mkdirSync(_path[0]);

  } else {

    for(var i=0; i<_path.length; i++)
      checkDir(_path[i]);
  }  
};


files = fs.readdirSync(DIR_SPEC);
checkDir(DIR_MD_OUT, DIR_JS_OUT);
files.forEach(function(file){

  var Data = fs.readFileSync(DIR_SPEC + file,'utf-8'),
      mapName = file.match(/(.*)\./i)[1],
      str = '{% embed_spec_map {"source": "'+ mapName +'-map.js", "id": "1"} %}\n\n### List of Entities';
      jsstr = fs.readFileSync(DIR_HTML + mapName + '.html', 'utf-8');
      
  jsstr = jsstr.match(/new FusionCharts\(([\s\S]*?)\)\.render\(\);/)[1];
  Data = Data.toString().replace("### List of Entities", str);
  fs.writeFileSync(DIR_MD_OUT + mapName +'.md', Data, 'utf8');
  fs.writeFileSync(DIR_JS_OUT + mapName +'-map.js', jsstr, 'utf8');
});

console.log("file write done"); 